"use client";

import { useState, useEffect } from "react";
import Cookies from "js-cookie";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/app/components/Navbar";
import { useRouter } from "next/navigation";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}) {
  const [account, setAccount] = useState(null);
  const router = useRouter();
  useEffect(() => {
    // Check for cookie on initial load
    const savedAccount = Cookies.get('userAccount');
    if (savedAccount) {
      setAccount(savedAccount);
    }

    // MetaMask event listener
    const handleAccountsChanged = (accounts) => {
      if (accounts.length > 0) {
        setAccount(accounts[0]);
        Cookies.set('userAccount', accounts[0], { expires: 7 }); // Save for 7 days
      } else {
        setAccount(null);
        Cookies.remove('userAccount');
      }
    };

    if (typeof window.ethereum !== 'undefined') {
      window.ethereum.on('accountsChanged', handleAccountsChanged);
    }

    return () => {
      if (typeof window.ethereum !== 'undefined') {
        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);
      }
    };
  }, []);



  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased  `}>
        <div className="min-h-screen bg-gray-900/50" >

          {children}
        </div>
      </body>
    </html>
  );
}
